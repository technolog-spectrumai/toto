"""
Django settings for toto project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import logging

logging.basicConfig(level=logging.DEBUG)


from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--g0q3jqz@81_kbndpgay5&s3fx3t08x10@#32@0xdik!nb!699'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.getenv("DJANGO_DEBUG", False) == True
#DEBUG = True
DJANGO_ENV = os.getenv("DJANGO_ENV", "dev")

if DJANGO_ENV != "PROD":
    DEBUG = True
else:
    DEBUG = False


ACME_CHALLENGE_ROOT = os.path.join(BASE_DIR, 'acme-challenges')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'django_celery_beat',
    'django_jsonform',
    'django_tiptap',
    'django_json_widget',
    'rest_framework',
    'import_export',
    "gervazy",
    "oya",
    "captcha",
    "netogami"
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.middleware.locale.LocaleMiddleware"
]

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

ROOT_URLCONF = 'toto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'toto.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# If you need to serve static files in production, use this:
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DJANGO_HOST_IP = os.getenv("DJANGO_HOST_IP", "127.0.0.1")  # Default fallback

DEBUG = DJANGO_ENV != "PROD"

ALLOWED_HOSTS = [DJANGO_HOST_IP, 'localhost']

CSRF_TRUSTED_ORIGINS = [
    f"http://{DJANGO_HOST_IP}:8080",
    f"http://localhost:8080",
    f"http://{DJANGO_HOST_IP}:8443",
    f"https://{DJANGO_HOST_IP}:8443",
    "http://localhost:8443",
    "https://localhost:8443"
]

CSRF_ALLOWED_ORIGINS = [
    f"http://{DJANGO_HOST_IP}:8080",
    f"http://localhost:8080",
    f"http://{DJANGO_HOST_IP}:8443",
    f"https://{DJANGO_HOST_IP}:8443",
    "http://localhost:8443",
    "https://localhost:8443"
]

if DJANGO_ENV == "PROD":
    print("=== PROD ===")
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SESSION_COOKIE_SECURE = True

    CSRF_COOKIE_SECURE = True
    CSRF_COOKIE_HTTPONLY = True
    CSRF_COOKIE_SAMESITE = 'Lax'
else:
    SECURE_SSL_REDIRECT = False
    CSRF_COOKIE_DOMAIN = DJANGO_HOST_IP
    CSRF_COOKIE_SECURE = False
    CSRF_COOKIE_HTTPONLY = False
    #CSRF_COOKIE_SAMESITE = "None"

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

LOG_PATH = os.path.join(BASE_DIR, 'log.txt')  # assuming BASE_DIR points to your project root

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "simple": {
            "format": "[{levelname}] {asctime} {name} - {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "class": "logging.FileHandler",
            "filename": LOG_PATH,
            "formatter": "simple",
        },
    },
    "root": {
        "handlers": ["file"],
        "level": "INFO",
    },
}


CELERY_BROKER_URL = "redis://localhost:6379/0"




